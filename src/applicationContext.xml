<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
	
	
	
	<!-- 1. 配置数据库连接mysql 数据库-->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/godFather" />
		<property name="username" value="root" />
		<property name="password" value="123123" />
	</bean>


	<!-- 2. (model)  mybatis的SqlSession的工厂，通过session工厂注入连接池来创建session对象执行数据库操作 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="classpath:com.model" />
	</bean>
	
	
	
	<!-- 3. (dao) mybatis自动扫描加载Sql映射文件 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.dao" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	
	<!-- 4. (service) 扫描service包，将service注册进来 -->
	<context:component-scan base-package="com.service" />
	
	
	
	<!--  Spring事务管理  提高项目的安全性能-->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!--  使用声明式事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />


	
	
	
</beans>