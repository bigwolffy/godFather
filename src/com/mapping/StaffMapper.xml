<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.StaffMapper">

    <select id="login" parameterType="com.model.Staff"  resultType="com.model.Staff">
       select * from staff where name=#{name} and password=#{password}
    </select>
    
      <select id="searchStaff" parameterType="com.model.Staff"  resultType="com.model.Staff">
       select * from staff where 
        <if test="id != ''">
        id=#{id} and
      </if>
      <if test="name != ''">
        name=#{name} and
      </if>
      <if test="sex != ''">
        sex=#{sex} and
      </if>
      <if test="position != ''">
        position=#{position} and
      </if>
       state=1  
     </select>
  
  <resultMap id="BaseResultMap" type="com.model.Staff">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="CHAR" property="sex" />
    <result column="phone" jdbcType="INTEGER" property="phone" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salary" jdbcType="INTEGER" property="salary" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.model.Staff">
    <result column="position" jdbcType="VARBINARY" property="position" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, sex, phone, password, salary
  </sql>
  <sql id="Blob_Column_List">
    position
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from staff
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.model.Staff">
    delete from staff
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.model.Staff">
    insert into staff (id, name, sex, phone, 
      password, salary, position
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR}, #{phone,jdbcType=INTEGER}, 
      #{password,jdbcType=VARCHAR}, #{salary,jdbcType=INTEGER}, #{position,jdbcType=VARBINARY}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.model.Staff">
    insert into staff
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="salary != null">
        salary,
      </if>
      <if test="position != null">
        position,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salary != null">
        #{salary,jdbcType=INTEGER},
      </if>
      <if test="position != null">
        #{position,jdbcType=VARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.model.Staff">
    update staff
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salary != null">
        salary = #{salary,jdbcType=INTEGER},
      </if>
      <if test="position != null">
        position = #{position,jdbcType=VARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.model.Staff">
    update staff
    set name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      phone = #{phone,jdbcType=INTEGER},
      password = #{password,jdbcType=VARCHAR},
      salary = #{salary,jdbcType=INTEGER},
      position = #{position,jdbcType=VARBINARY}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.model.Staff">
    update staff
    set name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      phone = #{phone,jdbcType=INTEGER},
      password = #{password,jdbcType=VARCHAR},
      salary = #{salary,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  
  
    
</mapper>